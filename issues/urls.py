from django.urls import path

from issues import views

urlpatterns = [
    path(r'^$', views.IssueList.as_view(), name="issues"),
    path(r'^create/$', views.IssueCreateView.as_view(), name="issue_create"),
    path(r'^upcoming-create/$', views.IssueCreateView.as_view(upcoming=True),
         name="issue_create_upcoming"),
    path(r'^(?P<pk>\d+)/$', views.IssueDetailView.as_view(), name="issue"),
    path(r'^(?P<pk>\d+)/edit/$', views.IssueEditView.as_view(),
         name="issue_edit"),
    path(r'^(?P<pk>\d+)/edit-abstract/$', views.IssueEditAbstractView.as_view(),
         name="issue_edit_abstract"),
    path(r'^(?P<pk>\d+)/set-length/$', views.IssueSetLengthView.as_view(),
         name="issue_set_length"),
    path(r'^(?P<pk>\d+)/complete/$', views.IssueCompleteView.as_view(),
         name="issue_complete"),
    path(r'^(?P<pk>\d+)/delete/$', views.IssueDeleteView.as_view(),
         name="issue_delete"),
    path(r'^(?P<pk>\d+)/attach/$', views.AttachmentCreateView.as_view(),
         name="add_attachment"),
    path(r'^(?P<issue_id>\d+)/remove-attachment/(?P<pk>\d+)/$',
         views.AttachmentDeleteView.as_view(),
         name="attachment_delete"),
    path(r'^(?P<issue_id>\d+)/download-attachment/(?P<pk>\d+)/$',
         views.AttachmentDownloadView.as_view(),
         name="attachment_download"),
    path(r'^(?P<issue_id>\d+)/create-proposal/$', views.ProposalCreateView.as_view(),
         name="proposal_create"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/$',
         views.ProposalDetailView.as_view(), name="proposal"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/edit/$',
         views.ProposalEditView.as_view(), name="proposal_edit"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/delete/$',
         views.ProposalDeleteView.as_view(), name="proposal_delete"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/task_completed/$',
         views.ProposalCompletedTaskView.as_view(), name="task_completed"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/edit-task/$',
         views.ProposalEditTaskView.as_view(), name="proposal_edit_task"),
    path(r'^delete-comment/(?P<pk>\d+)/$',
         views.IssueCommentDeleteView.as_view(), name="delete_issue_comment"),
    path(r'^edit-comment/(?P<pk>\d+)/$',
         views.IssueCommentEditView.as_view(), name="edit_issue_comment"),
    path(r'^vote/(?P<pk>\d+)/$',
         views.ProposalVoteView.as_view(), name="vote_on_proposal"),
    path(r'^vote/(?P<pk>\d+)/multi/$',
         views.MultiProposalVoteView.as_view(), name="multi_votes_on_proposal"),
    path(r'^argument_vote/(?P<pk>\d+)/$',
         views.ArgumentRankingVoteView.as_view(), name="vote_on_argument"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/proposal_arguments/$',
         views.ProposalArgumentsView.as_view(), name="proposal_arguments"),
    path(r'^(?P<issue_id>\d+)/(?P<pk>\d+)/proposal_more_arguments/$',
         views.ProposalMoreArgumentsView.as_view(), name="proposal_more_arguments"),
    path(r'^(?P<vote_id>\d+)/vote-argument-create/$',
         views.ProposalVoteArgumentCreateView.as_view(), name="create_vote_argument"),
    path(r'^delete-vote-argument/(?P<pk>\d+)/$',
         views.ProposalVoteArgumentDeleteView.as_view(), name="delete_proposal_argument"),
    path(r'^edit-vote-argument/(?P<pk>\d+)/$',
         views.ProposalVoteArgumentUpdateView.as_view(), name="edit_proposal_argument"),
    path(r'^get-argument-value/(?P<arg_id>\d+)/$',
         views.get_argument_value, name="get_argument_value"),
    path(r'^argument-up-down-vote/(?P<pk>\d+)/$',
         views.ArgumentRankingVoteView.as_view(), name="argument_up_down_vote"),
    path(r'^vote_res_panel/(?P<pk>\d+)/$',
         views.VoteResultsView.as_view(), name="vote_results_panel"),
    path(r'^(?P<issue_id>\d+)/set_register_votes/(?P<pk>\d+)/$',
         views.ChangeBoardVoteStatusView.as_view(), name="set_register_votes"),
    path(r'^autocomplete_tag/$',
         views.AutoCompleteTagView.as_view(), name="autocomplete_tag"),
    path(r'^assignments/$',
         views.AssignmentsView.as_view(), name="assignments"),
    path(r'^procedures/$',
         views.ProceduresView.as_view(), name="procedures"),
]

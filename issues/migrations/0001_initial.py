# Generated by Django 2.0 on 2017-12-06 12:47

import django.core.files.storage
from django.db import migrations, models
import issues.models
import ocd.base_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(default=ocd.base_models.create_uid, max_length=24, unique=True)),
                ('is_confidential', models.BooleanField(default=False, editable=False, verbose_name='Is Confidential')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('abstract', ocd.base_models.HTMLField(blank=True, null=True, verbose_name='Background')),
                ('content', ocd.base_models.HTMLField(blank=True, null=True, verbose_name='Content')),
                ('calculated_score', models.IntegerField(default=0, verbose_name='Calculated Score')),
                ('status', models.IntegerField(choices=[(1, 'Open'), (2, 'In upcoming meeting'), (3, 'In upcoming meeting (completed)'), (4, 'Archived')], default=1)),
                ('order_in_upcoming_meeting', models.IntegerField(blank=True, default=0, null=True, verbose_name='Order in upcoming meeting')),
                ('order_by_votes', models.FloatField(blank=True, default=0, null=True, verbose_name='Order in upcoming meeting by votes')),
                ('length_in_minutes', models.IntegerField(blank=True, null=True, verbose_name='Length (in minutes)')),
                ('completed', models.BooleanField(default=False, verbose_name='Discussion completed')),
                ('is_published', models.BooleanField(default=False, verbose_name='Is published to members')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issues',
                'ordering': ['order_in_upcoming_meeting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='IssueAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(default=ocd.base_models.create_uid, max_length=24, unique=True)),
                ('file', models.FileField(max_length=200, storage=django.core.files.storage.FileSystemStorage('/home/yaniv/Projects/OpComm/uploads'), upload_to=issues.models.issue_attachment_path, verbose_name='File')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('active', models.BooleanField(default=True)),
                ('ordinal', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='File created at')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='IssueComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(default=ocd.base_models.create_uid, max_length=24, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('ordinal', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('version', models.PositiveIntegerField(default=1)),
                ('last_edited_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Edited at')),
                ('content', ocd.base_models.HTMLField(verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Issue comment',
                'verbose_name_plural': 'Issue comments',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='IssueCommentRevision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('content', models.TextField(verbose_name='Content')),
            ],
        ),
        migrations.CreateModel(
            name='IssueRankingVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(default=ocd.base_models.create_uid, max_length=24, unique=True)),
                ('is_confidential', models.BooleanField(default=False, editable=False, verbose_name='Is Confidential')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create at')),
                ('type', models.PositiveIntegerField(choices=[(1, 'משימה'), (2, 'נוהל'), (3, 'כללי')], verbose_name='Type')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('content', ocd.base_models.HTMLField(blank=True, null=True, verbose_name='Details')),
                ('status', models.IntegerField(choices=[(1, 'In discussion'), (2, 'Accepted'), (3, 'Rejected')], default=1)),
                ('assigned_to', models.CharField(blank=True, max_length=200, null=True, verbose_name='Assigned to')),
                ('due_by', models.DateField(blank=True, null=True, verbose_name='Due by')),
                ('task_completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('votes_pro', models.PositiveIntegerField(blank=True, null=True, verbose_name='Votes pro')),
                ('votes_con', models.PositiveIntegerField(blank=True, null=True, verbose_name='Votes con')),
                ('community_members', models.PositiveIntegerField(blank=True, null=True, verbose_name='Community members')),
                ('register_board_votes', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Proposal',
                'verbose_name_plural': 'Proposals',
            },
        ),
        migrations.CreateModel(
            name='ProposalVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(-1, 'נגד'), (0, 'נמנע'), (1, 'בעד')], default=0, verbose_name='Vote')),
            ],
            options={
                'verbose_name': 'Proposal Vote',
                'verbose_name_plural': 'Proposal Votes',
            },
        ),
        migrations.CreateModel(
            name='ProposalVoteArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argument', models.TextField(verbose_name='Argument')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Create at')),
            ],
            options={
                'verbose_name': 'Proposal vote argument',
                'verbose_name_plural': 'Proposal vote arguments',
            },
        ),
        migrations.CreateModel(
            name='ProposalVoteArgumentRanking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(-1, 'נגד'), (1, 'בעד')], verbose_name='Vote')),
            ],
            options={
                'verbose_name': 'Proposal vote argument ranking',
                'verbose_name_plural': 'Proposal vote arguments ranking',
            },
        ),
        migrations.CreateModel(
            name='ProposalVoteBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(-1, 'נגד'), (0, 'נמנע'), (1, 'בעד')], default=0, verbose_name='Vote')),
                ('voted_by_chairman', models.BooleanField(default=False, verbose_name='Voted by chairman')),
            ],
            options={
                'verbose_name': 'Proposal Vote',
                'verbose_name_plural': 'Proposal Votes',
            },
        ),
        migrations.CreateModel(
            name='VoteResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes_pro', models.PositiveIntegerField(verbose_name='Votes pro')),
                ('votes_con', models.PositiveIntegerField(verbose_name='Votes con')),
                ('community_members', models.PositiveIntegerField(verbose_name='Community members')),
            ],
            options={
                'verbose_name': 'Vote result',
                'verbose_name_plural': 'Vote results',
            },
        ),
    ]

# Generated by Django 2.0 on 2017-12-06 12:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('issues', '0002_auto_20171206_1447'),
        ('meetings', '0002_auto_20171206_1447'),
        ('communities', '0002_auto_20171206_1447'),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='proposalvoteboard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='board_votes', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='proposalvoteargumentranking',
            name='argument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='issues.ProposalVoteArgument'),
        ),
        migrations.AddField(
            model_name='proposalvoteargumentranking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='argument_votes', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='proposalvoteargument',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='arguments_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='proposalvoteargument',
            name='proposal_vote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='arguments', to='issues.ProposalVote'),
        ),
        migrations.AddField(
            model_name='proposalvote',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='votes', to='issues.Proposal'),
        ),
        migrations.AddField(
            model_name='proposalvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='assigned_to_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='proposals_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to user'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='confidential_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='communities.CommunityConfidentialReason'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proposals_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='decided_at_meeting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='meetings.Meeting'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proposals', to='issues.Issue'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='issuerankingvote',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ranking_votes', to='issues.Issue'),
        ),
        migrations.AddField(
            model_name='issuerankingvote',
            name='voted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='issuecommentrevision',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='revisions', to='issues.IssueComment'),
        ),
        migrations.AddField(
            model_name='issuecommentrevision',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issue_comment_versions_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='issuecomment',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issue_comments_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='issuecomment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='issues.Issue'),
        ),
        migrations.AddField(
            model_name='issuecomment',
            name='last_edited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='issue_comments_last_edited', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='issuecomment',
            name='meeting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='meetings.Meeting'),
        ),
        migrations.AddField(
            model_name='issueattachment',
            name='agenda_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attachments', to='meetings.AgendaItem'),
        ),
        migrations.AddField(
            model_name='issueattachment',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='files_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='issueattachment',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachments', to='issues.Issue'),
        ),
        migrations.AddField(
            model_name='issue',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issues', to='communities.Community'),
        ),
        migrations.AddField(
            model_name='issue',
            name='confidential_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='communities.CommunityConfidentialReason'),
        ),
        migrations.AddField(
            model_name='issue',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issues_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AlterUniqueTogether(
            name='voteresult',
            unique_together={('proposal', 'meeting')},
        ),
        migrations.AlterUniqueTogether(
            name='proposalvoteboard',
            unique_together={('proposal', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='proposalvote',
            unique_together={('proposal', 'user')},
        ),
    ]
